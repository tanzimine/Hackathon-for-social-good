IMPORT $.File_AllData;
IMPORT Std;

EXPORT IncomeVulnerability := MODULE

// Record structure for income vulnerability scores
EXPORT ScoreRec := RECORD
    UNSIGNED3 FIPS_Code;
    STRING2   State;
    STRING35  Area_Name;
    REAL8     Median_Income;
    REAL8     Vulnerability_Score;
END;

// Get median household income data
SHARED medianIncome := File_AllData.pov_estimatesDS(Attribute = 'MEDHHINC_2021');

// Calculate national median for reference
SHARED nationalMedian := AVE(medianIncome, Value);

// Calculate vulnerability scores
// Higher score = more vulnerable (lower income)
// Score range: 0-100
EXPORT CalcScores(DATASET(File_AllData.pov_estimates) inDS) := FUNCTION
    RETURN PROJECT(inDS, TRANSFORM(ScoreRec,
        SELF.FIPS_Code := LEFT.FIPS_Code;
        SELF.State := LEFT.State;
        SELF.Area_Name := LEFT.Area_name;
        SELF.Median_Income := LEFT.Value;
        // Score calculation:
        // - Areas with income <= 50% of national median get max score (100)
        // - Areas with income >= 150% of national median get min score (0)
        // - Linear scale between these points
        REAL8 ratio := LEFT.Value / nationalMedian;
        SELF.Vulnerability_Score := IF(ratio <= 0.5, 100,
                                    IF(ratio >= 1.5, 0,
                                       100 * (1.5 - ratio)));
    ));
END;

// Calculate scores for all areas
EXPORT Scores := CalcScores(medianIncome);

// High vulnerability areas (score >= 80)
EXPORT HighVulnerability := Scores(Vulnerability_Score >= 80);

// Medium vulnerability areas (score between 40 and 80)
EXPORT MediumVulnerability := Scores(Vulnerability_Score >= 40 AND Vulnerability_Score < 80);

// Low vulnerability areas (score < 40)
EXPORT LowVulnerability := Scores(Vulnerability_Score < 40);

// All scores sorted by vulnerability (highest to lowest)
EXPORT SortedScores := SORT(Scores, -Vulnerability_Score);

// Summary statistics
EXPORT Stats := TABLE(Scores, {
    INTEGER TotalAreas := COUNT(GROUP),
    REAL8   AvgScore := AVE(GROUP, Vulnerability_Score),
    REAL8   MinScore := MIN(GROUP, Vulnerability_Score),
    REAL8   MaxScore := MAX(GROUP, Vulnerability_Score),
    INTEGER HighVulnerabilityCount := COUNT(GROUP, Vulnerability_Score >= 80),
    INTEGER MediumVulnerabilityCount := COUNT(GROUP, Vulnerability_Score >= 40 AND Vulnerability_Score < 80),
    INTEGER LowVulnerabilityCount := COUNT(GROUP, Vulnerability_Score < 40)
});

END; 